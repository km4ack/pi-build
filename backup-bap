#!/bin/bash
echo -e "\nBAP Backup utility \n"
# Where to backup
BACKUP_PATH="/tmp"
MOUNT_POINT="/media/usb"

#check if mount point exists
if [ ! -d “MOUNT_POINT” ] ; then 
	echo "USB not found"
else
    echo "USB here do the work"
fi

# What to backup. remember the \ for new line continuation last tine has none
backup_files="${HOME}/pi-build \
${HOME}/.config \
${HOME}/.fl* \
${HOME}/.xastir \
${HOME}/.tqsl \
${HOME}/.wine/drive_c/VARA/VARA.ini \
${HOME}/Desktop \
${HOME}/qsstv \
${HOME}/patmenu2/config \
${HOME}/.local/share/WSJT-X \
${HOME}/.local/share/JS8Call \
${HOME}/.local/share/pat \
${HOME}/.conkyrc \
${HOME}/*.*"

# archive filename
day=$(date +%A)
hostname=$(hostname -s)
archive_file="BAP-Backup-$hostname-$day.tgz"

#make some extra backup notes abnout the repo we have currently
echo -e "\n\nBAP Backup Log for $($BACKUP_PATH/$archive_file)"  >> ${HOME}/BAP-backup-log.txt
echo -e "$(git show --pretty=medium | head -7)\n" >> ${HOME}/BAP-backup-log.txt
echo -e "$(cd pi-build/ && git branch)\n" >> ${HOME}/BAP-backup-log.txt

# Print start status message.
echo -e "\nBacking up $backup_files to $BACKUP_PATH/$archive_file \n\n"
date

# Backup the files using tar.
tar czf $BACKUP_PATH/$archive_file $backup_files

echo -e "\nBackup finished\n"
# Long listing of files in $BACKUP_PATH to check file sizes.
ls -lh $BACKUP_PATH/$archive_file
#EOF
